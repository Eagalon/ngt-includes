//number_to_words.ngt
// Author: Ivan Soto
// Email: ivan@ims-productions.com
// Description: This script contains a function to convert an integral number into English words.
string number_to_words(double number, bool include_and) {
	string[] oneDigit = {"", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine"};
	string[] teens = {"", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"};
	string[] tens = {"", "Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"};
	// Convert the number to words
	if (number < -999999999 || number > 999999999)
		return "Number out of range";
	int num = round(number, 0);
	if (num < 0) {
		return "Negative " + number_to_words(-number, include_and);
	}
	else if (num >= 1 && num <= 9) {
		return oneDigit[num];
	}
	else if (num >= 11 && num <= 19) {
		return teens[num - 10];
	}
	else if (num >= 10 && num <= 90 && num % 10 == 0) {
		return tens[num / 10];
	}
	else if (num >= 21 && num <= 99) {
		return tens[num / 10] + (include_and ? " and " : " ") + oneDigit[num % 10];
	}
	else if (num >= 100 && num <= 999) {
		return oneDigit[num / 100] + " Hundred" + (num % 100 != 0 ? " and " + number_to_words(num % 100, include_and) : "");
	}
	else if (num >= 1000 && num <= 999999) {
		return number_to_words(num / 1000, false) + " Thousand" + (num % 1000 != 0 ? " " + number_to_words(num % 1000, include_and) : "");
	}
	else if (num >= 1000000 && num <= 999999999) {
		return number_to_words(num / 1000000, false) + " Million" + (num % 1000000 != 0 ? " " + number_to_words(num % 1000000, include_and) : "");
	}
	else {
		return "Number out of range";
	}
}
